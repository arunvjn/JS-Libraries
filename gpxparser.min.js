!function(e){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{("undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this).gpxparser=e()}}(function(){return function(){return function e(t,l,r){function n(i,o){if(!l[i]){if(!t[i]){var u="function"==typeof require&&require;if(!o&&u)return u(i,!0);if(a)return a(i,!0);var s=new Error("Cannot find module '"+i+"'");throw s.code="MODULE_NOT_FOUND",s}var p=l[i]={exports:{}};t[i][0].call(p.exports,function(e){return n(t[i][1][e]||e)},p,p.exports,e,t,l,r)}return l[i].exports}for(var a="function"==typeof require&&require,i=0;i<r.length;i++)n(r[i]);return n}}()({1:[function(e,t,l){let r=function(){this.xmlSource="",this.metadata={},this.waypoints=[],this.tracks=[],this.routes=[]};r.prototype.parse=function(e){let t=this,l=new window.DOMParser;this.xmlSource=l.parseFromString(e,"text/xml");let r=this.xmlSource.querySelector("metadata");if(null!=r){this.metadata.name=this.getElementValue(r,"name"),this.metadata.desc=this.getElementValue(r,"desc"),this.metadata.time=this.getElementValue(r,"time");let e={},t=r.querySelector("author");if(null!=t){e.name=this.getElementValue(t,"name"),e.email={};let l=t.querySelector("email");null!=l&&(e.email.id=l.getAttribute("id"),e.email.domain=l.getAttribute("domain"));let r={},n=t.querySelector("link");null!=n&&(r.href=n.getAttribute("href"),r.text=this.getElementValue(n,"text"),r.type=this.getElementValue(n,"type")),e.link=r}this.metadata.author=e;let l={},n=this.queryDirectSelector(r,"link");null!=n&&(l.href=n.getAttribute("href"),l.text=this.getElementValue(n,"text"),l.type=this.getElementValue(n,"type"),this.metadata.link=l)}var n=[].slice.call(this.xmlSource.querySelectorAll("wpt"));for(let e in n){var a=n[e];let l={};l.name=t.getElementValue(a,"name"),l.sym=t.getElementValue(a,"sym"),l.lat=parseFloat(a.getAttribute("lat")),l.lon=parseFloat(a.getAttribute("lon"));let r=parseFloat(t.getElementValue(a,"ele"));l.ele=isNaN(r)?null:r,l.cmt=t.getElementValue(a,"cmt"),l.desc=t.getElementValue(a,"desc");let i=t.getElementValue(a,"time");l.time=null==i?null:new Date(i),t.waypoints.push(l)}var i=[].slice.call(this.xmlSource.querySelectorAll("rte"));for(let e in i){let l=i[e],r={};r.name=t.getElementValue(l,"name"),r.cmt=t.getElementValue(l,"cmt"),r.desc=t.getElementValue(l,"desc"),r.src=t.getElementValue(l,"src"),r.number=t.getElementValue(l,"number");let n=t.queryDirectSelector(l,"type");r.type=null!=n?n.innerHTML:null;let a={},u=l.querySelector("link");null!=u&&(a.href=u.getAttribute("href"),a.text=t.getElementValue(u,"text"),a.type=t.getElementValue(u,"type")),r.link=a;let s=[];var o=[].slice.call(l.querySelectorAll("rtept"));for(let e in o){let l=o[e],r={};r.lat=parseFloat(l.getAttribute("lat")),r.lon=parseFloat(l.getAttribute("lon"));let n=parseFloat(t.getElementValue(l,"ele"));r.ele=isNaN(n)?null:n;let a=t.getElementValue(l,"time");r.time=null==a?null:new Date(a),s.push(r)}r.distance=t.calculDistance(s),r.elevation=t.calcElevation(s),r.slopes=t.calculSlope(s,r.distance.cumul),r.points=s,t.routes.push(r)}var u=[].slice.call(this.xmlSource.querySelectorAll("trk"));for(let e in u){let l=u[e],r={};r.name=t.getElementValue(l,"name"),r.cmt=t.getElementValue(l,"cmt"),r.desc=t.getElementValue(l,"desc"),r.src=t.getElementValue(l,"src"),r.number=t.getElementValue(l,"number");let n=t.queryDirectSelector(l,"type");r.type=null!=n?n.innerHTML:null;let a={},i=l.querySelector("link");null!=i&&(a.href=i.getAttribute("href"),a.text=t.getElementValue(i,"text"),a.type=t.getElementValue(i,"type")),r.link=a;let o=[],p=[].slice.call(l.querySelectorAll("trkpt"));for(let e in p){var s=p[e];let l={};l.lat=parseFloat(s.getAttribute("lat")),l.lon=parseFloat(s.getAttribute("lon"));let r=parseFloat(t.getElementValue(s,"ele"));l.ele=isNaN(r)?null:r;let n=t.getElementValue(s,"time");l.time=null==n?null:new Date(n),o.push(l)}r.distance=t.calculDistance(o),r.elevation=t.calcElevation(o),r.slopes=t.calculSlope(o,r.distance.cumul),r.points=o,t.tracks.push(r)}},r.prototype.getElementValue=function(e,t){let l=e.querySelector(t);return null!=l?null!=l.innerHTML?l.innerHTML:l.childNodes[0].data:l},r.prototype.queryDirectSelector=function(e,t){let l=e.querySelectorAll(t),r=l[0];if(l.length>1){let l=e.childNodes;for(idx in l)elem=l[idx],elem.tagName===t&&(r=elem)}return r},r.prototype.calculDistance=function(e){let t={},l=0,r=[];for(var n=0;n<e.length-1;n++)l+=this.calcDistanceBetween(e[n],e[n+1]),r[n]=l;return r[e.length-1]=l,t.total=l,t.cumul=r,t},r.prototype.calcDistanceBetween=function(e,t){let l={};l.lat=e.lat,l.lon=e.lon;let r={};r.lat=t.lat,r.lon=t.lon;var n=Math.PI/180,a=l.lat*n,i=r.lat*n,o=Math.sin((r.lat-l.lat)*n/2),u=Math.sin((r.lon-l.lon)*n/2),s=o*o+Math.cos(a)*Math.cos(i)*u*u;return 2*Math.atan2(Math.sqrt(s),Math.sqrt(1-s))*6371e3},r.prototype.calcElevation=function(e){for(var t=0,l=0,r={},n=0;n<e.length-1;n++){let r=e[n+1].ele,a=e[n].ele;if(null!==r&&null!==a){let e=parseFloat(r)-parseFloat(a);e<0?l+=e:e>0&&(t+=e)}}for(var a=[],i=0,o=(n=0,e.length);n<o;n++)if(null!==e[n].ele){var u=parseFloat(e[n].ele);a.push(u),i+=u}return r.max=Math.max.apply(null,a)||null,r.min=Math.min.apply(null,a)||null,r.pos=Math.abs(t)||null,r.neg=Math.abs(l)||null,r.avg=i/a.length||null,r},r.prototype.calculSlope=function(e,t){let l=[];for(var r=0;r<e.length-1;r++){let n=e[r],a=100*(e[r+1].ele-n.ele)/(t[r+1]-t[r]);l.push(a)}return l},r.prototype.toGeoJSON=function(){var e={type:"FeatureCollection",features:[],properties:{name:this.metadata.name,desc:this.metadata.desc,time:this.metadata.time,author:this.metadata.author,link:this.metadata.link}};for(idx in this.tracks){let r=this.tracks[idx];var t={type:"Feature",geometry:{type:"LineString",coordinates:[]},properties:{}};for(idx in t.properties.name=r.name,t.properties.cmt=r.cmt,t.properties.desc=r.desc,t.properties.src=r.src,t.properties.number=r.number,t.properties.link=r.link,t.properties.type=r.type,r.points){let e=r.points[idx];(l=[]).push(e.lon),l.push(e.lat),l.push(e.ele),t.geometry.coordinates.push(l)}e.features.push(t)}for(idx in this.routes){let r=this.routes[idx];for(idx in(t={type:"Feature",geometry:{type:"LineString",coordinates:[]},properties:{}}).properties.name=r.name,t.properties.cmt=r.cmt,t.properties.desc=r.desc,t.properties.src=r.src,t.properties.number=r.number,t.properties.link=r.link,t.properties.type=r.type,r.points){let e=r.points[idx];var l;(l=[]).push(e.lon),l.push(e.lat),l.push(e.ele),t.geometry.coordinates.push(l)}e.features.push(t)}for(idx in this.waypoints){let l=this.waypoints[idx];(t={type:"Feature",geometry:{type:"Point",coordinates:[]},properties:{}}).properties.name=l.name,t.properties.sym=l.sym,t.properties.cmt=l.cmt,t.properties.desc=l.desc,t.geometry.coordinates=[l.lon,l.lat,l.ele],e.features.push(t)}return e},void 0!==t&&(e("jsdom-global")(),t.exports=r)},{"jsdom-global":2}],2:[function(e,t,l){function r(){}t.exports=function(){return r}},{}]},{},[1])(1)});
